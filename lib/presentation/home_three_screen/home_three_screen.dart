import '../home_three_screen/widgets/gridtotalearnings_item_widget.dart';import '../home_three_screen/widgets/listburgerking3_item_widget.dart';import 'controller/home_three_controller.dart';import 'models/gridtotalearnings_item_model.dart';import 'models/listburgerking3_item_model.dart';import 'package:flutter/material.dart';import 'package:meats_delivery/core/app_export.dart';import 'package:meats_delivery/presentation/account_page/account_page.dart';import 'package:meats_delivery/presentation/home_one_page/home_one_page.dart';import 'package:meats_delivery/presentation/new_order_one_page/new_order_one_page.dart';import 'package:meats_delivery/presentation/weekly_insights_tab_container_page/weekly_insights_tab_container_page.dart';import 'package:meats_delivery/widgets/app_bar/appbar_image.dart';import 'package:meats_delivery/widgets/app_bar/appbar_subtitle_3.dart';import 'package:meats_delivery/widgets/app_bar/custom_app_bar.dart';import 'package:meats_delivery/widgets/custom_bottom_bar.dart';import 'package:meats_delivery/widgets/custom_button.dart';class HomeThreeScreen extends GetWidget<HomeThreeController> {@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.whiteA700, appBar: CustomAppBar(height: getVerticalSize(56.00), leadingWidth: 111, leading: Container(margin: getMargin(left: 20), decoration: BoxDecoration(color: ColorConstant.pink900, borderRadius: BorderRadius.circular(getHorizontalSize(16.00))), child: Row(children: [AppbarSubtitle3(text: "lbl_online".tr, margin: getMargin(left: 9, top: 5, bottom: 7)), Container(height: getSize(28.00), width: getSize(28.00), margin: getMargin(left: 7, top: 2, right: 2, bottom: 2), decoration: BoxDecoration(color: ColorConstant.whiteA700, borderRadius: BorderRadius.circular(getHorizontalSize(14.00))))])), actions: [AppbarImage(height: getSize(24.00), width: getSize(24.00), svgPath: ImageConstant.imgMusic, margin: getMargin(left: 21, top: 4, bottom: 4)), AppbarImage(height: getVerticalSize(20.00), width: getHorizontalSize(18.00), svgPath: ImageConstant.imgNotificationBlueGray300, margin: getMargin(left: 11, top: 6, right: 21, bottom: 6), onTap: onTapNotification)]), body: SizedBox(width: size.width, child: SingleChildScrollView(child: Container(width: size.width, margin: getMargin(top: 10), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Container(height: getVerticalSize(560.00), width: size.width, child: Stack(alignment: Alignment.topCenter, children: [Align(alignment: Alignment.center, child: Container(height: getVerticalSize(560.00), width: size.width, child: Stack(alignment: Alignment.bottomRight, children: [CustomImageView(imagePath: ImageConstant.imgMap560x375, height: getVerticalSize(560.00), width: getHorizontalSize(375.00), alignment: Alignment.center, onTap: () {onTapImgMap();}), Align(alignment: Alignment.bottomRight, child: Container(width: getHorizontalSize(355.00), margin: getMargin(bottom: 17), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Padding(padding: getPadding(left: 2), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgVector1Yellow800, height: getVerticalSize(173.00), width: getHorizontalSize(196.00)), CustomImageView(svgPath: ImageConstant.imgLocationTeal300, height: getVerticalSize(33.00), width: getHorizontalSize(27.00), margin: getMargin(left: 69, top: 46, bottom: 94))])), CustomButton(height: 36, width: 172, text: "msg_move_to_high_demand".tr, margin: getMargin(top: 147), variant: ButtonVariant.FillRed300, shape: ButtonShape.RoundedBorder14, padding: ButtonPadding.PaddingAll9, fontStyle: ButtonFontStyle.RobotoRomanMedium12), Container(height: getVerticalSize(109.00), child: Obx(() => ListView.separated(padding: getPadding(top: 9), scrollDirection: Axis.horizontal, physics: BouncingScrollPhysics(), separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(10.00));}, itemCount: controller.homeThreeModelObj.value.listburgerking3ItemList.length, itemBuilder: (context, index) {Listburgerking3ItemModel model = controller.homeThreeModelObj.value.listburgerking3ItemList[index]; return Listburgerking3ItemWidget(model);})))])))]))), Align(alignment: Alignment.topCenter, child: Container(height: getVerticalSize(1.00), width: getHorizontalSize(374.00), decoration: BoxDecoration(color: ColorConstant.gray300)))])), Container(height: getVerticalSize(176.00), width: getHorizontalSize(335.00), margin: getMargin(top: 20), child: Stack(alignment: Alignment.bottomCenter, children: [Align(alignment: Alignment.center, child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("msg_today_s_progress".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoBold18.copyWith(height: getVerticalSize(0.95))), Padding(padding: getPadding(left: 1), child: Text("lbl_nov_21".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoMedium10Gray90001.copyWith(height: getVerticalSize(1.71)))), Padding(padding: getPadding(top: 16), child: Obx(() => GridView.builder(shrinkWrap: true, gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(mainAxisExtent: getVerticalSize(44.00), crossAxisCount: 2, mainAxisSpacing: getHorizontalSize(40.00), crossAxisSpacing: getHorizontalSize(40.00)), physics: NeverScrollableScrollPhysics(), itemCount: controller.homeThreeModelObj.value.gridtotalearningsItemList.length, itemBuilder: (context, index) {GridtotalearningsItemModel model = controller.homeThreeModelObj.value.gridtotalearningsItemList[index]; return GridtotalearningsItemWidget(model);})))])), Align(alignment: Alignment.bottomCenter, child: Container(height: getVerticalSize(129.00), width: getHorizontalSize(1.00), decoration: BoxDecoration(color: ColorConstant.gray300))), Align(alignment: Alignment.bottomCenter, child: Container(height: getVerticalSize(1.00), width: getHorizontalSize(335.00), margin: getMargin(bottom: 66), decoration: BoxDecoration(color: ColorConstant.gray300)))])), Container(height: getVerticalSize(5.00), width: getHorizontalSize(374.00), margin: getMargin(top: 20), decoration: BoxDecoration(color: ColorConstant.gray200, borderRadius: BorderRadius.circular(getHorizontalSize(2.00)))), Padding(padding: getPadding(left: 20, top: 18, right: 19), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 1), child: Text("lbl_daily_target".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoBold18.copyWith(height: getVerticalSize(0.95)))), Padding(padding: getPadding(bottom: 1), child: Text("lbl_100".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoBold18Pink900.copyWith(height: getVerticalSize(0.95))))])), Padding(padding: getPadding(top: 20), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [Padding(padding: getPadding(top: 1), child: Text("lbl_target_pay".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRomanMedium12.copyWith(height: getVerticalSize(1.42)))), Padding(padding: getPadding(left: 11, bottom: 1), child: Text("lbl_20".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRomanMedium12.copyWith(height: getVerticalSize(1.42)))), Padding(padding: getPadding(left: 42, bottom: 1), child: Text("lbl_40".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRomanMedium12.copyWith(height: getVerticalSize(1.42)))), Padding(padding: getPadding(left: 40, bottom: 1), child: Text("lbl_60".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRomanMedium12.copyWith(height: getVerticalSize(1.42)))), Padding(padding: getPadding(left: 37, bottom: 1), child: Text("lbl_80".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRomanMedium12.copyWith(height: getVerticalSize(1.42)))), Padding(padding: getPadding(left: 37, bottom: 1), child: Text("lbl_100".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRomanMedium12.copyWith(height: getVerticalSize(1.42))))])), Container(height: getVerticalSize(14.00), width: getHorizontalSize(335.00), margin: getMargin(top: 8), child: Stack(alignment: Alignment.bottomLeft, children: [Align(alignment: Alignment.bottomCenter, child: Container(height: getVerticalSize(4.00), width: getHorizontalSize(335.00), margin: getMargin(bottom: 4), decoration: BoxDecoration(color: ColorConstant.gray300))), Align(alignment: Alignment.bottomLeft, child: Container(height: getVerticalSize(5.00), width: getHorizontalSize(58.00), margin: getMargin(bottom: 4), decoration: BoxDecoration(color: ColorConstant.teal300))), Align(alignment: Alignment.centerRight, child: Padding(padding: getPadding(right: 1), child: Row(mainAxisAlignment: MainAxisAlignment.center, mainAxisSize: MainAxisSize.min, children: [Container(height: getSize(14.00), width: getSize(14.00), decoration: BoxDecoration(color: ColorConstant.gray300, borderRadius: BorderRadius.circular(getHorizontalSize(7.00)))), Container(height: getSize(14.00), width: getSize(14.00), margin: getMargin(left: 48), decoration: BoxDecoration(color: ColorConstant.gray300, borderRadius: BorderRadius.circular(getHorizontalSize(7.00)))), Container(height: getSize(14.00), width: getSize(14.00), margin: getMargin(left: 48), decoration: BoxDecoration(color: ColorConstant.gray300, borderRadius: BorderRadius.circular(getHorizontalSize(7.00)))), Container(height: getSize(14.00), width: getSize(14.00), margin: getMargin(left: 48), decoration: BoxDecoration(color: ColorConstant.gray300, borderRadius: BorderRadius.circular(getHorizontalSize(7.00)))), Container(height: getSize(14.00), width: getSize(14.00), margin: getMargin(left: 48), decoration: BoxDecoration(color: ColorConstant.gray300, borderRadius: BorderRadius.circular(getHorizontalSize(7.00))))])))])), Container(height: getVerticalSize(80.00), width: size.width, margin: getMargin(top: 30))])))), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Get.toNamed(getCurrentRoute(type), id: 1);}))); } 
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return AppRoutes.homeOnePage; case BottomBarEnum.Liveorders: return AppRoutes.newOrderOnePage; case BottomBarEnum.Insights: return AppRoutes.weeklyInsightsTabContainerPage; case BottomBarEnum.Orderhistory: return "/"; case BottomBarEnum.Account: return AppRoutes.accountPage; default: return "/";} } 
Widget getCurrentPage(String currentRoute) { switch (currentRoute) {case AppRoutes.homeOnePage: return HomeOnePage(); case AppRoutes.newOrderOnePage: return NewOrderOnePage(); case AppRoutes.weeklyInsightsTabContainerPage: return WeeklyInsightsTabContainerPage(); case AppRoutes.accountPage: return AccountPage(); default: return DefaultWidget();} } 
onTapImgMap() { Get.toNamed(AppRoutes.newOrderScreen); } 
onTapNotification() { Get.toNamed(AppRoutes.newNotificationsScreen); } 
 }
