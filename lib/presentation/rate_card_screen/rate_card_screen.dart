import 'controller/rate_card_controller.dart';import 'package:flutter/material.dart';import 'package:meats_delivery/core/app_export.dart';import 'package:meats_delivery/presentation/account_page/account_page.dart';import 'package:meats_delivery/presentation/home_one_page/home_one_page.dart';import 'package:meats_delivery/presentation/new_order_one_page/new_order_one_page.dart';import 'package:meats_delivery/presentation/weekly_insights_tab_container_page/weekly_insights_tab_container_page.dart';import 'package:meats_delivery/widgets/app_bar/appbar_image.dart';import 'package:meats_delivery/widgets/app_bar/appbar_subtitle.dart';import 'package:meats_delivery/widgets/app_bar/custom_app_bar.dart';import 'package:meats_delivery/widgets/custom_bottom_bar.dart';import 'package:meats_delivery/widgets/custom_text_form_field.dart';class RateCardScreen extends GetWidget<RateCardController> {@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, backgroundColor: ColorConstant.whiteA700, appBar: CustomAppBar(height: getVerticalSize(56.00), leadingWidth: 26, leading: AppbarImage(height: getVerticalSize(12.00), width: getHorizontalSize(6.00), svgPath: ImageConstant.imgArrowleftGray900, margin: getMargin(left: 20, top: 6, bottom: 6), onTap: onTapArrowleft2), title: AppbarSubtitle(text: "lbl_rate_card".tr, margin: getMargin(left: 13)), actions: [AppbarImage(height: getSize(24.00), width: getSize(24.00), svgPath: ImageConstant.imgMusic, margin: getMargin(left: 21)), AppbarImage(height: getVerticalSize(20.00), width: getHorizontalSize(18.00), svgPath: ImageConstant.imgNotificationBlueGray300, margin: getMargin(left: 11, top: 2, right: 21, bottom: 2))]), body: SizedBox(width: size.width, child: SingleChildScrollView(child: Container(width: size.width, margin: getMargin(top: 14), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Container(height: getVerticalSize(1.00), width: getHorizontalSize(374.00), decoration: BoxDecoration(color: ColorConstant.gray300)), Padding(padding: getPadding(left: 20, top: 19), child: Text("lbl_order_pay".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoBold18Pink900.copyWith(height: getVerticalSize(0.95)))), Padding(padding: getPadding(left: 20, top: 2), child: Text("msg_earning_per_order".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoMedium10.copyWith(height: getVerticalSize(1.71)))), Align(alignment: Alignment.center, child: Padding(padding: getPadding(left: 20, top: 14, right: 20), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 1), child: Text("lbl_distance_pay".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoMedium14.copyWith(height: getVerticalSize(1.83)))), Padding(padding: getPadding(bottom: 1), child: RichText(text: TextSpan(children: [TextSpan(text: "lbl_1".tr, style: TextStyle(color: ColorConstant.gray90001, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w600, height: getVerticalSize(1.83))), TextSpan(text: " ", style: TextStyle(color: ColorConstant.gray900, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w500, height: getVerticalSize(1.83))), TextSpan(text: "lbl_per_km".tr, style: TextStyle(color: ColorConstant.blueGray300, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w500, height: getVerticalSize(1.83)))]), textAlign: TextAlign.left))]))), Padding(padding: getPadding(left: 20, top: 4), child: Text("msg_for_total_distance".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRomanRegular12.copyWith(height: getVerticalSize(1.00)))), Align(alignment: Alignment.center, child: Container(height: getVerticalSize(1.00), width: getHorizontalSize(335.00), margin: getMargin(top: 15), decoration: BoxDecoration(color: ColorConstant.gray300))), Align(alignment: Alignment.center, child: Padding(padding: getPadding(left: 20, top: 20, right: 20), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Padding(padding: getPadding(top: 1), child: Text("msg_order_ready_time".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoMedium14.copyWith(height: getVerticalSize(1.83)))), Padding(padding: getPadding(bottom: 1), child: RichText(text: TextSpan(children: [TextSpan(text: "lbl_1".tr, style: TextStyle(color: ColorConstant.gray90001, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w600, height: getVerticalSize(1.83))), TextSpan(text: " ", style: TextStyle(color: ColorConstant.gray900, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w500, height: getVerticalSize(1.83))), TextSpan(text: "lbl_per_min".tr, style: TextStyle(color: ColorConstant.blueGray300, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w500, height: getVerticalSize(1.83)))]), textAlign: TextAlign.left))]))), Container(width: getHorizontalSize(235.00), margin: getMargin(left: 20, top: 4), child: Text("msg_wait_time_for_order".tr, maxLines: null, textAlign: TextAlign.left, style: AppStyle.txtRobotoRomanRegular12.copyWith(height: getVerticalSize(1.00)))), Align(alignment: Alignment.center, child: Container(height: getVerticalSize(1.00), width: getHorizontalSize(335.00), margin: getMargin(top: 15), decoration: BoxDecoration(color: ColorConstant.gray300))), Align(alignment: Alignment.center, child: Padding(padding: getPadding(left: 20, top: 21, right: 20), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text("msg_minimum_base_pay".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoMedium14.copyWith(height: getVerticalSize(1.83))), RichText(text: TextSpan(children: [TextSpan(text: "lbl_5".tr, style: TextStyle(color: ColorConstant.gray90001, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w600, height: getVerticalSize(1.83))), TextSpan(text: " ", style: TextStyle(color: ColorConstant.gray900, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w500, height: getVerticalSize(1.83))), TextSpan(text: "lbl_per_trip".tr, style: TextStyle(color: ColorConstant.blueGray300, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w500, height: getVerticalSize(1.83)))]), textAlign: TextAlign.left)]))), Container(width: getHorizontalSize(235.00), margin: getMargin(left: 20, top: 4), child: Text("msg_wait_time_for_order".tr, maxLines: null, textAlign: TextAlign.left, style: AppStyle.txtRobotoRomanRegular12.copyWith(height: getVerticalSize(1.00)))), Container(height: getVerticalSize(5.00), width: size.width, margin: getMargin(top: 20), decoration: BoxDecoration(color: ColorConstant.gray200, borderRadius: BorderRadius.circular(getHorizontalSize(2.00)))), Align(alignment: Alignment.center, child: Padding(padding: getPadding(left: 20, top: 20, right: 20), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text("msg_daily_target_pay".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoBold18Pink900.copyWith(height: getVerticalSize(0.95))), Padding(padding: getPadding(top: 2, bottom: 2), child: RichText(text: TextSpan(children: [TextSpan(text: "lbl_52".tr, style: TextStyle(color: ColorConstant.gray90001, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w600, height: getVerticalSize(1.83))), TextSpan(text: " ", style: TextStyle(color: ColorConstant.gray900, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w500, height: getVerticalSize(1.83))), TextSpan(text: "lbl_upto".tr, style: TextStyle(color: ColorConstant.blueGray300, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w500, height: getVerticalSize(1.83)))]), textAlign: TextAlign.left))]))), Padding(padding: getPadding(left: 20, top: 2), child: Text("msg_for_reaching_order".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoMedium10.copyWith(height: getVerticalSize(1.71)))), Container(height: getVerticalSize(5.00), width: size.width, margin: getMargin(top: 23), decoration: BoxDecoration(color: ColorConstant.gray200, borderRadius: BorderRadius.circular(getHorizontalSize(2.00)))), Padding(padding: getPadding(left: 20, top: 20), child: Text("msg_login_hours_guarantee".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoBold18Pink900.copyWith(height: getVerticalSize(0.95)))), Padding(padding: getPadding(left: 20, top: 2), child: Text("msg_min_guaranteed".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoMedium10.copyWith(height: getVerticalSize(1.71)))), Align(alignment: Alignment.center, child: Padding(padding: getPadding(left: 20, top: 14, right: 20), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text("msg_daily_guarantee".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoMedium14.copyWith(height: getVerticalSize(1.83))), RichText(text: TextSpan(children: [TextSpan(text: "lbl_52".tr, style: TextStyle(color: ColorConstant.gray90001, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w600, height: getVerticalSize(1.83))), TextSpan(text: " ", style: TextStyle(color: ColorConstant.gray900, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w500, height: getVerticalSize(1.83))), TextSpan(text: "lbl_upto".tr, style: TextStyle(color: ColorConstant.blueGray300, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w500, height: getVerticalSize(1.83)))]), textAlign: TextAlign.left)]))), CustomTextFormField(width: 335, focusNode: FocusNode(), controller: controller.groupEightyOneController, hintText: "msg_for_min_daily_login".tr, margin: getMargin(top: 6), variant: TextFormFieldVariant.UnderLineGray300, fontStyle: TextFormFieldFontStyle.RobotoRomanRegular12, textInputAction: TextInputAction.done, alignment: Alignment.center), Align(alignment: Alignment.center, child: Padding(padding: getPadding(left: 20, top: 21, right: 20), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text("msg_weekly_guarantee".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoMedium14.copyWith(height: getVerticalSize(1.83))), RichText(text: TextSpan(children: [TextSpan(text: "lbl_20".tr, style: TextStyle(color: ColorConstant.gray90001, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w600, height: getVerticalSize(1.83))), TextSpan(text: " ", style: TextStyle(color: ColorConstant.gray900, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w500, height: getVerticalSize(1.83))), TextSpan(text: "lbl_upto".tr, style: TextStyle(color: ColorConstant.blueGray300, fontSize: getFontSize(14), fontFamily: 'Roboto', fontWeight: FontWeight.w500, height: getVerticalSize(1.83)))]), textAlign: TextAlign.left)]))), Padding(padding: getPadding(left: 20, top: 6), child: Text("msg_for_min_weekly".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtRobotoRomanRegular12.copyWith(height: getVerticalSize(1.00)))), Container(height: getVerticalSize(80.00), width: size.width, margin: getMargin(top: 60))])))), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Get.toNamed(getCurrentRoute(type), id: 1);}))); } 
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return AppRoutes.homeOnePage; case BottomBarEnum.Liveorders: return AppRoutes.newOrderOnePage; case BottomBarEnum.Insights: return AppRoutes.weeklyInsightsTabContainerPage; case BottomBarEnum.Orderhistory: return "/"; case BottomBarEnum.Account: return AppRoutes.accountPage; default: return "/";} } 
Widget getCurrentPage(String currentRoute) { switch (currentRoute) {case AppRoutes.homeOnePage: return HomeOnePage(); case AppRoutes.newOrderOnePage: return NewOrderOnePage(); case AppRoutes.weeklyInsightsTabContainerPage: return WeeklyInsightsTabContainerPage(); case AppRoutes.accountPage: return AccountPage(); default: return DefaultWidget();} } 
onTapArrowleft2() { Get.back(); } 
 }
